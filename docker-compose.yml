services:
  # django:
  #   build: .
  #   container_name: django
  #   image: django
  #   networks:
  #     - main
  #   ports:
  #     - 8000:8000
  #   restart: always
  #   environment:
  #     - DEBUG=1
  #     - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1
  #     - CELERY_BROKER=redis://redis:6379/0
  #     - CELERY_BACKEND=redis://redis:6379/0
  #   depends_on:
  #     - redis
  #     - postgres

  redis:
    container_name: redis
    image: "redis:alpine"

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.10
    networks:
      - main
    ports:
      - "5672:5672"
    restart: always

  postgres:
    container_name: postgres
    image: postgres:16.0
    environment:
      - POSTGRES_DB=podcast
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - main
    ports:
      - 5432:5432
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # celery_worker:
  #   container_name: celery_worker
  #   command: "celery -A A worker -l info"
  #   depends_on:
  #     - app
  #     - rabbitmq
  #     - postgres
  #   build: .
  #   environment:
  #     - C_FORCE_ROOT = "TRUE"
  #   networks:
  #     - main
  #   restart: always
  #   volumes:
  #     - ./config/:/config

  app:
    build: .
    command: sh -c "python manage.py migrate && python manage.py runserver"
    container_name: app
    volumes:
      - ./config:/config
    depends_on:
      - postgres
      - rabbitmq
    ports:
      - 8080:8000
    networks:
      - main
    restart: always

networks:
  main:


volumes:
  postgres_data:
